<div class='record_edit_page'>

Editing---
<%= @record.id %>

<div>
  <%# form_with : https://qiita.com/manbolila/items/b8336ab115f3aebacbb9 %>
  <%= form_with model: @record, local: true, multipart: true  do |f| %>

    <div class="field">
      <%= f.label :record_type %>
      <%= f.select :record_type, Record.record_types.keys.map { |w| [w.humanize, w] } %>
    </div>

    <div class="field">
      <%= f.label :record_status %>
      <%# * It's 'record_statuses', not 'record_status' here !!!! %>
      <%= f.select :record_status, Record.record_statuses.keys.map { |w| [w.humanize, w] } %>
    </div>

    <div class="field">
      <%= f.label :title %>
      <%= f.text_field :title %>
    </div>

    <div class="field">
      <%= f.label :content %>
      <%= f.text_area :content %>
    </div>


    <div class="field">
      <%= f.label :machine %>
      <%= f.collection_select :machine_id, Machine.all, :id, :name %>
    </div>


    <%= f.collection_check_boxes :user_ids, User.all, :id, :name %>

    <%#  Add new imgs %>
    <div class="field">
      <%= f.label :images %><br>
      <%# direct_upload: 
      https://edgeguides.rubyonrails.org/active_storage_overview.html#direct-uploads
      https://techracho.bpsinc.jp/hachi8833/2018_02_06/52179 %>
      <%= f.file_field :images, 
          id: "img_upload_field",
          multiple: true , direct_upload: true,
          onchange: "show_new_imgs(event)",
          class:'hidden'
      %>
      <button id='img_upload_button' class='button-blue'>Add New Images</button>
      <div id="image-preview"></div>
    </div>

    <%# Show imgs %>
    <div class='flex-box'>
      <% @record.images.each do |image| %>
        <div class='img_container'>
          <%= image_tag image , :class => 'record_img_thumbnail'%>
          <%# rails check box:  https://www.sejuku.net/blog/27132 %>
          <%= check_box_tag 'images_to_delete[]', image.id ,false, :style => 'display:none;'%>
          <span class="button-delete" data-image-id="<%= image.id %>">x</span>
        </div>
      <% end %>
    </div>

    <%= f.submit 'Save', class: "button button-blue"  %>
    
  <% end %>
</div>

<script>

  let all_new_imgs=[]
  
  // Use my button to call the imgs upload field
  document.getElementById('img_upload_button').addEventListener('click', event=> {
    event.preventDefault();
    document.getElementById('img_upload_field').click();
  });
  // Add new img to all new imgs list
  function show_new_imgs(event) {
    new_imgs=Array.from(event.target.files);
    all_new_imgs.unshift(...new_imgs)
    console.log('all_new_imgs',all_new_imgs)

    // Preview after adding new imgs
    let imagePreview = document.getElementById('image-preview');
    imagePreview.innerHTML = '';  // clear up existing previews
    all_new_imgs.forEach(function(file) {
      let reader = new FileReader();
      reader.onload = function(e) {
        let img = document.createElement('img');
        img.src = e.target.result;
        img.classList.add('record_img_thumbnail');
        imagePreview.appendChild(img);
      }
      reader.readAsDataURL(file);
    });
  }
  
  
  // Delete img
  document.querySelectorAll('.button-delete').forEach(function(button) {
    button.addEventListener('click', function(event) {
      let container = button.parentNode;
      let imageId = button.dataset.imageId;
      let checkbox = document.querySelector('input[name="images_to_delete[]"][value="' + imageId + '"]');
      let imgElement = container.querySelector('.record_img_thumbnail');

      checkbox.checked = !checkbox.checked;

      if (checkbox.checked) {
        imgElement.classList.add('img-deleted');

        let labelDeleted = document.createElement('span');
        labelDeleted.textContent = 'Deleted';
        labelDeleted.classList.add('label-deleted');
        container.appendChild(labelDeleted);
      } else {
        imgElement.classList.remove('img-deleted');

        let labelDeleted = container.querySelector('.label-deleted');
        if (labelDeleted) {
          container.removeChild(labelDeleted);
        }
      }

      let imagesToDelete = document.getElementsByName('images_to_delete[]');
      let selectedImages = Array.from(imagesToDelete).filter(checkbox => checkbox.checked);
      console.log('Images to delete:', selectedImages.map(checkbox => checkbox.value));
      //console.log('Ixxx:', document.getElementsByName('images_to_delete[]'));
    });
  });  


</script>


</div>