<div class='record_edit_page'>

Editing---
<%= @record.id %>

<div>
  <%# form_with : https://qiita.com/manbolila/items/b8336ab115f3aebacbb9 %>
  <%= form_with model: @record, local: true, multipart: true  do |f| %>

    <div class="field">
      <%= f.label :record_type %>
      <%= f.select :record_type, Record.record_types.keys.map { |w| [w.humanize, w] } %>
    </div>

    <div class="field">
      <%= f.label :record_status %>
      <%# * It's 'record_statuses', not 'record_status' here !!!! %>
      <%= f.select :record_status, Record.record_statuses.keys.map { |w| [w.humanize, w] } %>
    </div>

    <div class="field">
      <%= f.label :title %>
      <%= f.text_field :title %>
    </div>

    <div class="field">
      <%= f.label :content %>
      <%= f.text_area :content %>
    </div>


    <div class="field">
      <%= f.label :machine %>
      <%= f.collection_select :machine_id, Machine.all, :id, :name %>
    </div>


    <%= f.collection_check_boxes :user_ids, User.all, :id, :name %>

    <%#  Add new imgs %>
    <div class="field">
      <%= f.label :images %><br>
      <%# direct_upload: 
      https://edgeguides.rubyonrails.org/active_storage_overview.html#direct-uploads
      https://techracho.bpsinc.jp/hachi8833/2018_02_06/52179 %>
      <%= f.file_field :images, 
          id: "img_upload_field",
          multiple: true , direct_upload: true,
          onchange: "show_new_imgs(event)",
          class:'hidden'
      %>
      <button id='img_upload_button' class='button-blue'>Add New Images</button>
      <div id="image-preview"></div>
    </div>

    <%# Show imgs %>
    <div class='flex-box flex-wrap'>
      <% @record.images.each do |image| %>
        <div class='img_container'>
          <%= image_tag image , :class => 'record_img_thumbnail'%>
          <%# rails check box:  https://www.sejuku.net/blog/27132 %>
          <%# https://railsdoc.com/page/check_box_tag %>
          <%= check_box_tag 'images_to_delete[]', image.id, checked=false, class: 'hidden'%>
          <span class="button-delete" data-image-id="<%= image.id %>">x</span>
        </div>
      <% end %>
    </div>

    <%= f.submit 'Save',id:'save_btn', class: "button button-blue"  %>
    
  <% end %>
</div>

<script>
  

  // *Use 'window.all_new_imgs' instead of 'let all_new_imgs=[]', otherwise it will 
  // cause 'Uncaught SyntaxError: redeclaration of let all_new_imgs' error when loading
  // this page for the second time when using Turbo!!!!
  window.all_new_imgs = [];

  
  // Use my button to call the imgs upload field
  document.getElementById('img_upload_button').addEventListener('click', e=> {
    e.preventDefault();
    document.getElementById('img_upload_field').click();
  });
  // Add new img to all new imgs list
  function show_new_imgs(e) {

    //Upload imgs files
    new_imgs=Array.from(e.target.files); 
    /*
    *problem: want it to be able to open the selection box multiple times to 
    select photos, but don't know how to change the parameters params[:record][:images]
    in records_controller.rb, so only the last one selected was uploaded.
    */
    window.all_new_imgs.unshift(...new_imgs)
    console.log('all_new_imgs',all_new_imgs)

    // Preview after adding new imgs
    let imagePreview = document.getElementById('image-preview');
    imagePreview.innerHTML = '';  // clear up existing previews
    window.all_new_imgs.forEach(file => {
      let reader = new FileReader();
      // *Can't change to (e) => {} here because arrow functions don't have 
      // their own 'this' so .onload() will points to the outside object!!!! 
      reader.onload = function(event) {
        let img = document.createElement('img');
        img.src = event.target.result;
        img.classList.add('record_img_thumbnail');
        imagePreview.appendChild(img);
      }
      reader.readAsDataURL(file);
    });
  }
  
  // Delete img
  document.querySelectorAll('.button-delete').forEach(button => {
    button.addEventListener('click', e => {
      let container = button.parentNode;
      let image_id = button.dataset.imageId;
      let checkbox = document.querySelector('input[name="images_to_delete[]"][value="' + image_id + '"]');
      let img_element = container.querySelector('.record_img_thumbnail');

      // Switch checked box
      checkbox.checked = !checkbox.checked;

      if (checkbox.checked) {
        // Add style and show 'Deleted' label
        img_element.classList.add('img-deleted');

        let label_deleted = document.createElement('span');
        label_deleted.textContent = 'Deleted';
        label_deleted.classList.add('label-deleted');
        container.appendChild(label_deleted);
      } else {
        // Remove style and 'Deleted' label
        img_element.classList.remove('img-deleted');

        let label_deleted = container.querySelector('.label-deleted');
        if (label_deleted) {
          container.removeChild(label_deleted);
        }
      }

      // Console log
      let img_delete_check_boxes = document.getElementsByName('images_to_delete[]');
      let selected_imgs = Array.from(img_delete_check_boxes).filter(checkbox => checkbox.checked);
      console.log('Images to delete:', selected_imgs.map(checkbox => checkbox.value));
      
    });
  });  

  document.getElementById('img_upload_button').addEventListener('submit', e=>{
    e.preventDefault();

    //chatgpt,我觉得应该在这里把all_new_imgs作为params[:record][:images]传过去，但不知道要怎么写

    form.submit();
   }    
  )

</script>


</div>